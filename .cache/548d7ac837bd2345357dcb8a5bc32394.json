{"dependencies":[{"name":"C:\\Users\\smrqu\\Desktop\\Portfolio\\node_modules\\sweetalert2\\package.json","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\smrqu\\Desktop\\Portfolio\\package.json","includedInParent":true,"mtime":1627845255120},{"name":"C:\\Users\\smrqu\\Desktop\\Portfolio\\.babelrc","includedInParent":true,"mtime":1627843701960}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\n\nexports.default = {\n  swalPromiseResolve: new WeakMap()\n};","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":18},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":11,"column":15}},{"name":"swalPromiseResolve","generated":{"line":17,"column":0},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":12,"column":2}},{"generated":{"line":17,"column":22},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":12,"column":22}},{"name":"WeakMap","generated":{"line":17,"column":26},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":12,"column":26}},{"generated":{"line":17,"column":33},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":12,"column":22}},{"generated":{"line":18,"column":0},"source":"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js","original":{"line":11,"column":15}}],"sources":{"..\\..\\node_modules\\sweetalert2\\src\\privateMethods.js":"/**\n * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\n\nexport default {\n  swalPromiseResolve: new WeakMap()\n}\n"},"lineCount":null}},"hash":"f8f435f475f51468e2d266c4eff438a6","cacheData":{"env":{}},"id":132}